name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run build
      run: pnpm run build

    - name: Run tests
      run: pnpm test

    - name: Test CLI functionality
      run: |
        node bin/cli.js --help
        node bin/cli.js init --dir ./test-release-locales
        node bin/cli.js check --dir ./test-release-locales
        if [ "$RUNNER_OS" == "Windows" ]; then
          rmdir /s /q test-release-locales 2>nul || true
        else
          rm -rf ./test-release-locales
        fi
      shell: bash

  publish:
    name: Publish to NPM
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://registry.npmjs.org'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build package
      run: pnpm run build

    - name: Verify package contents
      run: |
        echo "Building package for verification..."
        pnpm pack > /dev/null
        PACKAGE_FILE=$(ls *.tgz | head -1)
        echo "Package file: $PACKAGE_FILE"
        echo "Package contents:"
        tar -tzf "$PACKAGE_FILE" | head -20
        echo "Package size: $(du -h "$PACKAGE_FILE" | cut -f1)"
        echo "Cleaning up verification package..."
        rm "$PACKAGE_FILE"

    - name: Publish to NPM
      run: pnpm publish --no-git-checks
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this release

          ### New Features
          - ✨ Added `setMultiple` command for bulk translation updates
          - 🔍 Enhanced missing translation detection with `missing-translations` command
          - 🛠️ Added comprehensive lint scripts for code formatting
          - 🎯 Improved hardcoded string detection with better filtering

          ### Improvements
          - 📦 Fixed package verification in CI/CD pipeline
          - 🧹 Removed trailing whitespace across all source files
          - 📚 Enhanced documentation and usage examples
          - ⚡ Better error handling and user feedback

          ### Tools & Commands
          ```bash
          # New bulk translation command
          npx vibei18n setMultiple page.title '{"zh-hans":"标题","fr-FR":"Titre"}'

          # Check for missing translations
          npx vibei18n missing-translations --verbose

          # Format checking (for contributors)
          npm run lint
          npm run lint:whitespace:fix
          ```

          ### Installation
          ```bash
          npm install -g vibei18n
          # or use directly
          npx vibei18n --help
          ```

          See the [README](README.md) for complete documentation.
        draft: false
        prerelease: false

  test-published-package:
    name: Test published package
    needs: publish
    runs-on: ubuntu-latest

    steps:
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Wait for package to be available
      run: sleep 60

    - name: Test global installation
      run: |
        pnpm add -g vibei18n@latest
        vibei18n --help
        vibei18n init --dir ./test-global-install
        vibei18n locales --dir ./test-global-install

    - name: Test npx usage
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          rmdir /s /q test-global-install 2>nul || true
        else
          rm -rf ./test-global-install
        fi
        npx vibei18n@latest init --dir ./test-npx
        npx vibei18n@latest locales --dir ./test-npx
      shell: bash